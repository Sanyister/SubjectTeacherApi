// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using zsoow6TeacherSubjApi.Context;

#nullable disable

namespace zsoow6TeacherSubjApi.Migrations
{
    [DbContext(typeof(Zsoow6TeacherSubjApiContext))]
    partial class Zsoow6TeacherSubjApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("speciality")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.SemesterStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SemesterStudent");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.SemesterTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("SemesterTeacher");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeptunCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Credit")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Professorate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentId");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.SubjectTimetable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("semesterId")
                        .HasColumnType("int");

                    b.Property<string>("timetable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("semesterId");

                    b.ToTable("SubjectTimetable");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeptunCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("titleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("titleId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("title")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Title");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.SemesterStudent", b =>
                {
                    b.HasOne("zsoow6TeacherSubjApi.Model.Entity.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("zsoow6TeacherSubjApi.Model.Entity.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("zsoow6TeacherSubjApi.Model.Entity.Subject", null)
                        .WithMany("semesterStudent")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Semester");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.SemesterTeacher", b =>
                {
                    b.HasOne("zsoow6TeacherSubjApi.Model.Entity.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("zsoow6TeacherSubjApi.Model.Entity.Subject", null)
                        .WithMany("semesterTeacher")
                        .HasForeignKey("SubjectId");

                    b.HasOne("zsoow6TeacherSubjApi.Model.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Semester");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.Student", b =>
                {
                    b.HasOne("zsoow6TeacherSubjApi.Model.Entity.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.Subject", b =>
                {
                    b.HasOne("zsoow6TeacherSubjApi.Model.Entity.Semester", null)
                        .WithMany("Subjects")
                        .HasForeignKey("SemesterId");

                    b.HasOne("zsoow6TeacherSubjApi.Model.Entity.Student", null)
                        .WithMany("Subjects")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.SubjectTimetable", b =>
                {
                    b.HasOne("zsoow6TeacherSubjApi.Model.Entity.Subject", null)
                        .WithMany("semesterTimetable")
                        .HasForeignKey("SubjectId");

                    b.HasOne("zsoow6TeacherSubjApi.Model.Entity.Semester", "semester")
                        .WithMany()
                        .HasForeignKey("semesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("semester");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.Teacher", b =>
                {
                    b.HasOne("zsoow6TeacherSubjApi.Model.Entity.Title", "title")
                        .WithMany()
                        .HasForeignKey("titleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("title");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.Semester", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.Student", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("zsoow6TeacherSubjApi.Model.Entity.Subject", b =>
                {
                    b.Navigation("semesterStudent");

                    b.Navigation("semesterTeacher");

                    b.Navigation("semesterTimetable");
                });
#pragma warning restore 612, 618
        }
    }
}
